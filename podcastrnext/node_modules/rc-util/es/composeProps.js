import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function composeProps(originProps, patchProps, isAll) {
  var composedProps = _objectSpread(_objectSpread({}, originProps), isAll ? patchProps : {});

  Object.keys(patchProps).forEach(function (key) {
    var func = patchProps[key];

    if (typeof func === 'function') {
      composedProps[key] = function () {
        func.apply(void 0, arguments);
        return originProps[key].apply(originProps, arguments);
      };
    }
  });
  return composedProps;
}

export default composeProps;