{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Naiara Borges\\\\Documents\\\\C\\xF3digos\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 //24 hours\n\n  };\n};","map":{"version":3,"sources":["C:/Users/Naiara Borges/Documents/CÃ³digos/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","Episode","episode","title","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAgC,UAAhC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAGA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAkBA,eAAe,SAASC,OAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA8C;AACzD,sBACI;AAAA,cAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACtD,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMZ,GAAG,CAACa,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAMP,OAAO,GAAG;AACZW,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADG;AAEZV,IAAAA,KAAK,EAAEQ,IAAI,CAACR,KAFA;AAGZW,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHJ;AAIZC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJF;AAKZC,IAAAA,WAAW,EAAEpB,MAAM,CAACC,QAAQ,CAACc,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAACC,MAAAA,MAAM,EAAEpB;AAAT,KAA1C,CALP;AAMZqB,IAAAA,QAAQ,EAAEC,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CANJ;AAOZG,IAAAA,gBAAgB,EAAEtB,2BAA2B,CAACoB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CAAP,CAPjC;AAQZI,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WARN;AASZC,IAAAA,GAAG,EAAEb,IAAI,CAACU,IAAL,CAAUG;AATH,GAAhB;AAYA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHvB,MAAAA;AADG,KADJ;AAIHwB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAJnB,CAIuB;;AAJvB,GAAP;AAMH,CAvBM","sourcesContent":["import { format, parseISO} from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router';\r\nimport { api } from '../../services/api';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\ntype Episode = {\r\n  id: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  members: string;\r\n  duration: number;\r\n  durationAsString: string;\r\n  url: string;\r\n  publishedAt: string;\r\n  description: string;\r\n};\r\n\r\ntype EpisodeProps = {\r\n    episode: Episode;\r\n}\r\n\r\nexport default function Episode( { episode }: EpisodeProps ) {\r\n    return (\r\n        <h1>{episode.title}</h1>\r\n    )\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n    return {\r\n        paths: [],\r\n        fallback: 'blocking'\r\n    }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n    const { slug } = ctx.params;\r\n\r\n    const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n    const episode = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBR}),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        description: data.description,\r\n        url: data.file.url,\r\n      };\r\n\r\n    return {\r\n        props: {\r\n            episode,\r\n        },\r\n        revalidate: 60 * 60 * 24, //24 hours\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}